Django Rest Framework
======================
Prerequisite : Python + Djago

Terminology:
-------------------
API
Web API / Web Service
REST
REST API/RESTful Web api/Restful webservice
Django Rest Framework

1).API:
	Application Programming Interface
	The main objective of API is two applications can communicate with each other. API allows external agent to communicate(integrate and exchange information) with our application.

In simple way:'Methods of communication between software components'
Ex:
	Samsung mobile phone keypad
	ATM GUI pannel(withdra, check balance....)
	Internally one application is there by using GUI end user accessing that application. GUI is API
Ex:
		End User

		Java App						API							Django(Django App Dev)
									API Developers
		Mobile App

Ex:By using API a java application can communicate with python application

Note:
	Interface of communication between the user and application is nothing but API. The user can be Human user, an android app or desktop etc......

2).Web API/Web Service:
-------------------------------------
	The interface of communication between the user and application over the web by using HTTP is nothing but web API.
			
				Java							Web						Web
				App							API						APP
Ex:
	Bookmyshow application can communicate with payment gateway application to complete our booking.
Ex:
	Authentication with facebook

3).REST:(Representational State transfer)
---------------------------------------------------------------
REST is an architectural style.
If defines several rules/guide lines to develop web APIs/Web services

By using REST, we can develop web APIs very easily in concise way.
Hence REST is the most popular architecture to develop web services.

4).RESTFul API:
-------------------------
The API which is developed by using REST architecture is nothing but RESTful API
/ REST API. i.e interface between the user and application where API implements REST architecture.

Note:
	REST is basically an architecture where as RESTful API is an API that implements REST.

5).Django Rest Framework:
-----------------------------------------
Django REST framework is a powerful and flexible toolkit for building web APIs
It is the most commonly used framework in python world to build WEB API's.
This framework internally uses all django facilities like models, views, templates, ORM etc....

Ex:
		sunnyjobs.com
		one job details share to all students(sms gateways)
		How sms gateway communicate to our django app(API is required)
Ex:
		800 crores people are in world
		All these people communicate any person to any other person

Ex:common language(HTTP)
	common message format:JSON/XML	
			Java													Python
			Linux												MAC	

										API

			.Net													SAP
			windows											Linux

1).API:
	Can be used to access functionality of any application
	It may be stand alone application/web application/enterprise apps

2).Web API / Web Service:
	Can be used to access functionality of web application by using HTTP.

3).REST:
	It is architecture, which provides several guidelines to develop web APIs very easily and effectively.

4).RESTful API:
	The web API which implements REST principles is called as RESTful API.

5).Django REST Framework:
	It provides toolki to develop RESTful APIs for django based applications very easily.

The main objective of web APIs is interoperability. i.e different applications can communicate with each other irrespective of develop language and platforms.

Common language:HTTP
Common message format:JSON

Types of web services:
	1.SOAP based web services
	2.RESTful web services

Types of web services:
	1.SOAP based web services
	2.RESTful web services

1).SOAP Based web services:
	SOAP:Simple Object Access Protocol
	SOAP is an XML based protocol for accessing web services.

Limitations:
	1.SOAP based web services will always provide data only in XM format. Parsing of this XML data is very slow, which creates performance problems.
	2.Transfer of XML data over network requires more bandwidth.
	3.Implementing SOAP based web services is very difficult.

Note:
	Because of heavy weight, less performance and more bandwidth requirements, SOAP based web services are not commonly used these days.

2).RESTful web services:
	Most of the times RESTful web services will provide data in the form of JSON, parsing is not difficult. Hence this type of web services are faster when compared with SOAP based web services.
	Transfer of JSON data over the network requires less bandwidth

HTTP Verbs:
	GET			-->To get one/more resources
	POST		-->To create a new resource
	PUT			-->To update a resource
	PATCH		-->Partial updates just change emp sal
	DELETE	-->To delete a resource

Web Service Provider vs Web Service Consumer:
-------------------------------------------------------------------------
-->The application which is providing web services is called as web service provider.
-->The application which is consuming web data through web services, is called as web service consumer.

Ex:Bookmyshw app----->Payment Gateway app To complete our booking bookmyshow app will communicates with payment gateway app. Hence payment gateway app acts as web service provider and bookmyshow app acts as web service consumer.

App-1:Django View Function to send HTML Response
--------------------------------------------------------------------------------
D:\REST_API_28MAY_4PM>django-admin startproject withoutrest
D:\REST_API_28MAY_4PM\withoutrest>py manage.py startapp testapp
Add app in settings.py

views.py
-------------
from django.http import  HttpResponse
def emp_data_view(request):
    emp_data = {
        'eno':101,
        'ename':'Sunny',
        'esal':12000,
        'eaddr':'Mumbai'
    }
    resp = '<h1>Employee Number:{}<br>Employee Name:{}<br>                     Employee Salary:{}<br>Employee Address:{}</h1>' .format(emp_data['eno'],emp_data['ename'],emp_data['esal'],emp_data['eaddr'])
    return HttpResponse(resp)

urls.py:
	path('api/',views.emp_data_view)

Django view function to send HTTPResponse with JSON Data
---------------------------------------------------------------------------------------------
Python contains in-built module:json
dumps():To convert python dictionary to json
loads():To convert json to python dicttionary

views.py
-------------
import json
def emp_data_json_view(request):
    emp_data = {
        'eno':102,
        'ename':'Radhika',
        'esal':15000,
        'eaddr':'Vja'
    }
    json_data = json.dumps(emp_data)
    return HttpResponse(json_data,content_type='application/json')

urls.py:
	path('apijson/', views.emp_data_json_view)

http request ===> Browser
		Is it possible to send http request from cmd promt

command line http clients:
	curl,	httpie

pip install httpie

goto cmd:
	http http://127.0.0.1:8000/apijson/
	http http://127.0.0.1:8000/api/

Djnago view function to send JsonResponse directly
--------------------------------------------------------------------------------
views.py
------------
from django.http import JsonResponse
def emp_data_json_view2(request):
    emp_data = {
        'eno':103,
        'ename':'Lilly',
        'esal':18000,
        'eaddr':'Bng'
    }
    return JsonResponse(emp_data)

urls.py:
	path('apijson2/', views.emp_data_json_view2)

Python application to communicate with Django application
--------------------------------------------------------------------------------------------
-->Create a python file test.py in project level
from the python application === >http

requests module is required
pip install requests

test.py
----------
import requests
BASE_URL = 'http://127.0.0.1:8000/'
END_POINT = 'apijson2'
resp = requests.get(BASE_URL + END_POINT)
data = resp.json()
print('Data from django application')
print('*'*30)
print('Employee Number:',data['eno'])
print('Employee Name:',data['ename'])
print('Employee Salary:',data['esal'])
print('Employee Address:',data['eaddr'])